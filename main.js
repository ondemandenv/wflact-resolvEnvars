"use strict";var __createBinding=this&&this.__createBinding||(Object.create?function(e,s,n,o){void 0===o&&(o=n);var r=Object.getOwnPropertyDescriptor(s,n);r&&!("get"in r?!s.__esModule:r.writable||r.configurable)||(r={enumerable:!0,get:function(){return s[n]}}),Object.defineProperty(e,o,r)}:function(e,s,n,o){void 0===o&&(o=n),e[o]=s[n]}),__setModuleDefault=this&&this.__setModuleDefault||(Object.create?function(e,s){Object.defineProperty(e,"default",{enumerable:!0,value:s})}:function(e,s){e.default=s}),__importStar=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var s={};if(null!=e)for(var n in e)"default"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&__createBinding(s,e,n);return __setModuleDefault(s,e),s};Object.defineProperty(exports,"__esModule",{value:!0}),exports.run=void 0;const core=__importStar(require("@actions/core")),process=__importStar(require("node:process")),child_process_1=require("child_process"),client_sts_1=require("@aws-sdk/client-sts"),client_ssm_1=require("@aws-sdk/client-ssm");async function run(){console.log("process.env[tmp]>>>>>>>>>");for(const e in process.env)core.warning(`process.env.${e} = "${process.env[e]}"`);console.log("process.env[tmp]<<<<<<<<<\n\n\n");const e=process.env.INPUT_AWS_CREDENTIALS;let s;try{if(e&&e.startsWith("[")){const n=/\[(.+?)\]\s+aws_access_key_id=(.+?)\s+aws_secret_access_key=(.+?)\s+aws_session_token=(.+)/,o=e.match(n);if(o){const[e,n,r,t,c]=o;s={accessKeyId:r,secretAccessKey:t,sessionToken:c}}else console.warn(`can't find match to input:\n                     \n    ${e}\n    \n    `)}else console.log("no input_creds_str found!")}catch(e){throw console.error(e),e}const n=JSON.parse(process.env.ODMD_SECRETS);console.log("JSON.stringify(secrets.awsCred)>>>>>"),console.log(n.awsCred),console.log("--------------------------"),console.log(JSON.stringify(n.odmdAcc)),console.log("JSON.stringify(secrets.awsCred)<<<<<<"),s||(s={accessKeyId:n.awsCred.AccessKeyId,secretAccessKey:n.awsCred.SecretAccessKey,sessionToken:n.awsCred.SessionToken});const o=process.env.ODMD_buildId,r=process.env.ODMD_awsRegion,t={region:r,credentials:s},c=new client_sts_1.STSClient(t),i=await c.send(new client_sts_1.GetCallerIdentityCommand({}));core.info(">>>>"),core.info(JSON.stringify(i,null,2)),core.info("<<<<"),process.env.AWS_ACCESS_KEY_ID=s.accessKeyId,process.env.AWS_SECRET_ACCESS_KEY=s.secretAccessKey,process.env.AWS_SESSION_TOKEN=s.sessionToken,process.env.AWS_DEFAULT_REGION=r;const _=process.env.GITHUB_REF.split("/"),a=("heads"==_[1]?"b..":"t..")+_[2],l=new client_ssm_1.SSMClient(t);try{const e=await l.send(new client_ssm_1.GetParameterCommand({Name:`/odmd-${o}/${a}/enver_config`})),n=JSON.parse(e.Parameter.Value);n.AWS_ACCESS_KEY_ID=s.accessKeyId,n.AWS_SECRET_ACCESS_KEY=s.secretAccessKey,n.AWS_SESSION_TOKEN=s.sessionToken,n.AWS_DEFAULT_REGION=r;for(const e in n){const s=`echo "${e}=${n[e]}" >> $GITHUB_ENV`,o=(0,child_process_1.execSync)(s).toString();core.info(`${s}\n${o}`)}}catch(e){core.error(e)}}exports.run=run,run();